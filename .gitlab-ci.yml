variables:
  # DJANGO_CONFIG: "test"
  POSTGRES_DATABASE: $POSTGRES_DATABASE
  POSTGRES_USER: $POSTGRES_USER
  POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  SSH_PRIVKEY_FOR_ROOT_YOURVISIONNOW_COM: $SSH_PRIVKEY_FOR_ROOT_YOURVISIONNOW_COM
  USERNAME: $USERNAME
  DEPLOY_TOKEN: $DEPLOY_TOKEN

  TZ: "America/Los_Angeles"

default:
  image: ubuntu:20.04
  before_script:
    - echo 'Doing things...'

#connect_to_postgres:
#  image: postgres
#  script:
#  # official way to provide password to psql: http://www.postgresql.org/docs/9.3/static/libpq-envars.html
#  - export PGPASSWORD=$POSTGRES_PASSWORD
#  - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DATABASE" -c "SELECT 'OK' AS status;"

stages:
  - initialize

setup_docker_container_and_deploy:
  stage: initialize
  script:
    - export TZ=America/Los_Angeles
    - export DEBIAN_FRONTEND=noninteractive
    - apt -y update
    - apt -y install apt-utils
    - apt -y install net-tools python3.8 python3-pip postgresql openssh-server openssh-client git
    - apt -y upgrade
    - pip3 install -r requirements.txt
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - touch ~/.ssh/id_rsa
    - echo 'Set beta.yourvisionnow.com privkey'
    - echo "$SSH_PRIVKEY_FOR_ROOT_YOURVISIONNOW_COM" | ssh-add - > ~/.ssh/id_rsa
    - chmod 0600 ~/.ssh/id_rsa
    - ssh-keyscan beta.yourvisionnow.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config --global user.email "chausse@gmail.com"
    - git config --global user.name "Ryan Chausse"
    - echo 'try to connect to beta.yourvisionnow.com'
    #- ssh -i ~/.ssh/id_rsa root@beta.yourvisionnow.com
      "cd /var/www;
      git clone https://$USERNAME:$DEPLOY_TOKEN@code.ryanchausse.com/ryanchausse/yourvisionnow.git;"
    - ssh -i ~/.ssh/id_rsa root@beta.yourvisionnow.com
      "hostname;
      ssh-keyscan code.ryanchausse.com >> ~/.ssh/known_hosts;
      chmod 644 ~/.ssh/known_hosts;
      echo 'Pulling yourvisionnow repo';
      cd /var/www/yourvisionnow;
      git pull;
      chown -R www-data:www-data /var/www;"
#    - python3 manage.py makemigrations
#    - python3 manage.py migrate
#    - python3 manage.py check
#    - python3 manage.py test
