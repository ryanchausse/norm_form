variables:
  # DJANGO_CONFIG: "test"
  POSTGRES_DATABASE: $POSTGRES_DATABASE
  POSTGRES_USER: $POSTGRES_USER
  POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY

default:
  image: ubuntu:20.04
  services:
    - mysql:8.0
  cache:
    paths:
      - ~/.cache/pip/
  before_script:
    - apt -y update
    - apt -y install apt-utils
    - apt -y install net-tools python3.8 python3-pip mysql-client libmysqlclient-dev
    - apt -y upgrade
    - pip3 install -r requirements.txt
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add - > ~/.ssh/id_rsa
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan ryanchausse.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config --global user.email "chausse@gmail.com"
    - git config --global user.name "Ryan Chausse"

Test SSH:
  script:
  - echo 'try to connect to beta.yourvisionnow.com'
  - ssh root@ryanchausse.com

migrations:
  stage: build
  script:
    - python3 manage.py makemigrations
    - python3 manage.py migrate
    - python3 manage.py check


django-tests:
  stage: test
  script:
    - echo "GRANT ALL on *.* to '${MYSQL_USER}';"| mysql -u root --password="${MYSQL_ROOT_PASSWORD}" -h mysql
    - python3 manage.py test


stages:
  - build
  - test

build-code-job:
  stage: build
  script:
    - echo "Check the ruby version, then build some Ruby project files:"
    - ruby -v
    - rake

test-code-job1:
  stage: test
  script:
    - echo "If the files are built successfully, test some files with one command:"
    - rake test1

test-code-job2:
  stage: test
  script:
    - echo "If the files are built successfully, test other files with a different command:"
    - rake test2
