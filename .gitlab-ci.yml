variables:
  # DJANGO_CONFIG: "test"
  POSTGRES_DATABASE: $POSTGRES_DATABASE
  POSTGRES_USER: $POSTGRES_USER
  POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY
  TZ: "America/Los_Angeles"

default:
  image: ubuntu:20.04
  services:
    - postgres:12.2-alpine
  cache:
    paths:
      - ~/.cache/pip/
  before_script:
    - apt -y update
    - apt -y install apt-utils
    - apt -y install net-tools python3.8 python3-pip postgresql openssh-server openssh-client git
    - apt -y upgrade
    - pip3 install -r requirements.txt
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - touch ~/.ssh/id_rsa
    - echo "$SSH_PRIVATE_KEY" | ssh-add - > ~/.ssh/id_rsa
    - ssh-keyscan beta.yourvisionnow.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config --global user.email "chausse@gmail.com"
    - git config --global user.name "Ryan Chausse"

#connect_to_postgres:
#  image: postgres
#  script:
#  # official way to provide password to psql: http://www.postgresql.org/docs/9.3/static/libpq-envars.html
#  - export PGPASSWORD=$POSTGRES_PASSWORD
#  - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DATABASE" -c "SELECT 'OK' AS status;"

stages:
  - initialize
  - build
  - test
  - deploy

test_ssh:
  stage: initialize
  script:
  - echo 'try to connect to beta.yourvisionnow.com'
  - ls -la
  - ls -la ~/.ssh
  - whoami
  - pwd
  - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  - chmod 0600 ~/.ssh/id_rsa
  - ls -la ~/.ssh
  - cat /etc/ssh/ssh_config
  - cat /etc/ssh/sshd_config
  - ssh -vvv -i ~/.ssh/id_rsa root@beta.yourvisionnow.com "ls -la"

run_migrations:
  stage: initialize
  script:
    - ssh -vvv -i ~/.ssh/id_rsa root@beta.yourvisionnow.com "hostname;
    -- echo 'testing second command';
    -- cd /var/www
    -- apt -y update
    -- apt -y install apt-utils
    -- apt -y install net-tools python3.8 python3-pip postgresql openssh-server openssh-client git
    -- apt -y upgrade
    -- git config --global user.email "chausse@gmail.com"
    -- git config --global user.name "Ryan Chausse"
    -- git pull git@code.ryanchausse.com:ryanchausse/yourvisionnow.git
    - "
#    - python3 manage.py makemigrations
#    - python3 manage.py migrate
#    - python3 manage.py check

build_app:
  stage: build
  script:
    - echo "Build the Django application"
    - ls -la

django_test:
  stage: test
  script:
    - echo "Running tests..."
    - python3 manage.py test

prod_deploy:
  stage: deploy
  script:
    - echo "Deploy to prod server"
